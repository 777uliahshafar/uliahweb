{"version":3,"sources":["webpack:///./src/templates/tag-posts.js"],"names":["tagQuery","tagPosts","data","tag","pageContext","totalCount","allMarkdownRemark","tagTitle","text","edges","map","node","key","id","slug","fields","keyword","frontmatter","title","date","excerpt","fluid","image","childImageSharp","tags"],"mappings":"8FAAA,6GAkCaA,EAAQ,aAqCNC,UAhEE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACRC,EADgC,EAAlBC,YACdD,IACAE,EAAeH,EAAKI,kBAApBD,WACFE,EAAcF,EAAN,SACK,IAAfA,EAAmB,GAAK,KADd,iBAEGF,EAFH,IAId,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOK,KAAMD,IACZL,EAAKI,kBAAkBG,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,kBAAC,IAAD,CAASC,IAAKD,EAAKE,GACfC,KAAMH,EAAKI,OAAOD,KAClBE,QAASL,EAAKM,YAAYD,QAC1BE,MAAOP,EAAKM,YAAYC,MACxBC,KAAMR,EAAKM,YAAYE,KACvBC,QAAST,EAAKS,QACdC,MAAOV,EAAKM,YAAYK,MAAMC,gBAAgBF,MAC9CG,KAAMb,EAAKM,YAAYO","file":"component---src-templates-tag-posts-js-51daa5ef8f13a2edaa68.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Title from '../components/title'\nimport Article from '../components/article'\n\n\nconst tagPosts = ({ data, pageContext }) => {\n    const { tag } = pageContext\n    const { totalCount } = data.allMarkdownRemark\n    const tagTitle = `${totalCount} post${\n        totalCount === 1 ? '' : 's'\n    } tagged with \"${tag}\"`\n\n    return (\n        <Layout>\n            <Title text={tagTitle}></Title>\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n                <Article key={node.id}\n                    slug={node.fields.slug}\n                    keyword={node.frontmatter.keyword}\n                    title={node.frontmatter.title}\n                    date={node.frontmatter.date}\n                    excerpt={node.excerpt} \n                    fluid={node.frontmatter.image.childImageSharp.fluid}\n                    tags={node.frontmatter.tags} />\n            ))}\n\n        </Layout>\n    )\n\n\n}\n\nexport const tagQuery = graphql`\n    query($tag: String!) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC}\n            filter: { frontmatter: { tags: { in: [$tag]}}}\n            ){\n        totalCount\n        edges {\n            node \n            {\n                id\n                frontmatter{\n                    title\n                    date(formatString: \"MMMM YYYY\")\n                    keywords\n                    tags\n                    image{\n                    childImageSharp{\n                        fluid(maxWidth:400, maxHeight: 200){\n                        ...GatsbyImageSharpFluid\n                        }\n                    }\n                    }\n                    \n                }\n                fields{\n                    slug\n                }\n                excerpt\n\n            }\n            \n        }\n        }\n    }\n`\n\nexport default tagPosts"],"sourceRoot":""}